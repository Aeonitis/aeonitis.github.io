{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { AppContext, WipPrompt } from '../context/AppContext';\nimport ArgumentMap from '../components/ArgumentMap/ArgumentMap';\nimport NodeCustomization from '../components/ArgumentMap/NodeCustomization';\nimport { validateResolution, getRandomSampleResolution } from '../utils/validationUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    resolution,\n    setResolution\n  } = useContext(AppContext);\n  const [resolutionInput, setResolutionInput] = useState('');\n  const [isMapVisible, setIsMapVisible] = useState(false);\n  const [validationError, setValidationError] = useState('');\n  const [suggestion, setSuggestion] = useState('');\n  const [placeholderIndex, setPlaceholderIndex] = useState(0);\n  const inputRef = useRef(null);\n\n  // Effect for cycling sample resolutions in the placeholder\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPlaceholderIndex(prev => prev + 1);\n    }, 5000); // Change every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get a new sample resolution for the placeholder\n  const getPlaceholder = () => {\n    return `Try: \"${getRandomSampleResolution()}\"`;\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate the resolution\n    const result = validateResolution(resolutionInput);\n    if (result.valid) {\n      // Set the resolution and show the map\n      setResolution(resolutionInput);\n      setIsMapVisible(true);\n      setValidationError('');\n      setSuggestion(result.suggestion || '');\n    } else {\n      // Show validation error\n      setValidationError(result.message);\n      setSuggestion('');\n      // Focus the input for correction\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(WipPrompt, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !isMapVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resolution-input-container\",\n      style: {\n        maxWidth: '600px',\n        margin: '100px auto',\n        padding: '30px',\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '20px',\n          color: '#333'\n        },\n        children: \"Create Your Argument Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: '30px',\n          color: '#666'\n        },\n        children: \"Start by entering a clear, concise resolution statement. This will be the foundation of your argument map.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            value: resolutionInput,\n            onChange: e => setResolutionInput(e.target.value),\n            placeholder: getPlaceholder(),\n            style: {\n              width: '100%',\n              padding: '12px 15px',\n              fontSize: '16px',\n              border: `1px solid ${validationError ? '#e57373' : '#ccc'}`,\n              borderRadius: '4px',\n              outline: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#e57373',\n              textAlign: 'left',\n              fontSize: '14px',\n              marginTop: '8px'\n            },\n            children: validationError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            backgroundColor: '#1a73e8',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            padding: '12px 24px',\n            fontSize: '16px',\n            fontWeight: '500',\n            cursor: 'pointer',\n            transition: 'background-color 0.2s'\n          },\n          children: \"Create Argument Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"argument-map-page\",\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: resolution\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), suggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          padding: '10px',\n          backgroundColor: '#e8f4fd',\n          borderRadius: '4px',\n          color: '#0277bd',\n          fontSize: '14px'\n        },\n        children: [\"Tip: \", suggestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(NodeCustomization, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ArgumentMap, {\n          initialResolution: resolution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsMapVisible(false);\n          setResolutionInput('');\n        },\n        style: {\n          marginTop: '20px',\n          padding: '8px 16px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Create New Argument Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"hQkLWRBPElajEoKY4Td1N13A05U=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","AppContext","WipPrompt","ArgumentMap","NodeCustomization","validateResolution","getRandomSampleResolution","jsxDEV","_jsxDEV","Home","_s","resolution","setResolution","resolutionInput","setResolutionInput","isMapVisible","setIsMapVisible","validationError","setValidationError","suggestion","setSuggestion","placeholderIndex","setPlaceholderIndex","inputRef","interval","setInterval","prev","clearInterval","getPlaceholder","handleSubmit","e","preventDefault","result","valid","message","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","textAlign","marginBottom","color","onSubmit","ref","type","value","onChange","target","placeholder","width","fontSize","border","outline","marginTop","fontWeight","cursor","transition","display","flexDirection","gap","initialResolution","onClick","_c","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { AppContext, WipPrompt } from '../context/AppContext';\nimport ArgumentMap from '../components/ArgumentMap/ArgumentMap';\nimport NodeCustomization from '../components/ArgumentMap/NodeCustomization';\nimport { validateResolution, getRandomSampleResolution } from '../utils/validationUtils';\n\nconst Home = () => {\n  const { resolution, setResolution } = useContext(AppContext);\n  const [resolutionInput, setResolutionInput] = useState('');\n  const [isMapVisible, setIsMapVisible] = useState(false);\n  const [validationError, setValidationError] = useState('');\n  const [suggestion, setSuggestion] = useState('');\n  const [placeholderIndex, setPlaceholderIndex] = useState(0);\n  const inputRef = useRef(null);\n\n  // Effect for cycling sample resolutions in the placeholder\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPlaceholderIndex(prev => prev + 1);\n    }, 5000); // Change every 5 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Get a new sample resolution for the placeholder\n  const getPlaceholder = () => {\n    return `Try: \"${getRandomSampleResolution()}\"`;\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Validate the resolution\n    const result = validateResolution(resolutionInput);\n    \n    if (result.valid) {\n      // Set the resolution and show the map\n      setResolution(resolutionInput);\n      setIsMapVisible(true);\n      setValidationError('');\n      setSuggestion(result.suggestion || '');\n    } else {\n      // Show validation error\n      setValidationError(result.message);\n      setSuggestion('');\n      // Focus the input for correction\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }\n  };\n\n  return (\n    <div className=\"home-container\">\n      {/* WIP Prompt will show if there's saved work */}\n      <WipPrompt />\n      \n      {!isMapVisible ? (\n        <div className=\"resolution-input-container\" style={{\n          maxWidth: '600px',\n          margin: '100px auto',\n          padding: '30px',\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n          textAlign: 'center'\n        }}>\n          <h1 style={{ marginBottom: '20px', color: '#333' }}>\n            Create Your Argument Map\n          </h1>\n          \n          <p style={{ marginBottom: '30px', color: '#666' }}>\n            Start by entering a clear, concise resolution statement. This will be the foundation of your argument map.\n          </p>\n          \n          <form onSubmit={handleSubmit}>\n            <div style={{ marginBottom: '20px' }}>\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={resolutionInput}\n                onChange={(e) => setResolutionInput(e.target.value)}\n                placeholder={getPlaceholder()}\n                style={{\n                  width: '100%',\n                  padding: '12px 15px',\n                  fontSize: '16px',\n                  border: `1px solid ${validationError ? '#e57373' : '#ccc'}`,\n                  borderRadius: '4px',\n                  outline: 'none'\n                }}\n              />\n              \n              {validationError && (\n                <div style={{ \n                  color: '#e57373', \n                  textAlign: 'left', \n                  fontSize: '14px',\n                  marginTop: '8px'\n                }}>\n                  {validationError}\n                </div>\n              )}\n            </div>\n            \n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: '#1a73e8',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '12px 24px',\n                fontSize: '16px',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'background-color 0.2s'\n              }}\n            >\n              Create Argument Map\n            </button>\n          </form>\n        </div>\n      ) : (\n        <div className=\"argument-map-page\" style={{ padding: '20px' }}>\n          <h2 style={{ marginBottom: '20px' }}>{resolution}</h2>\n          \n          {suggestion && (\n            <div style={{ \n              marginBottom: '20px', \n              padding: '10px', \n              backgroundColor: '#e8f4fd', \n              borderRadius: '4px',\n              color: '#0277bd',\n              fontSize: '14px'\n            }}>\n              Tip: {suggestion}\n            </div>\n          )}\n          \n          <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n            <NodeCustomization />\n            <ArgumentMap initialResolution={resolution} />\n          </div>\n          \n          <button\n            onClick={() => {\n              setIsMapVisible(false);\n              setResolutionInput('');\n            }}\n            style={{\n              marginTop: '20px',\n              padding: '8px 16px',\n              backgroundColor: '#f0f0f0',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            Create New Argument Map\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}