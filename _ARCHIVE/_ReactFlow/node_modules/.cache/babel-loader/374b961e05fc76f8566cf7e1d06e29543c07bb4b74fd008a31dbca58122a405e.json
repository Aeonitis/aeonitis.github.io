{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { addEdge, Controls, Background, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport NodeButton from './NodeButton';\nimport ColorPickerPopup from './ColorPickerPopup';\nimport { validateStatement } from '../../utils/validationUtils';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\n// Define node types and their default colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NODE_TYPES = {\n  resolution: {\n    label: 'Resolution',\n    color: '#f0e6f6'\n  },\n  because: {\n    label: 'Because',\n    color: '#e6f6e6'\n  },\n  but: {\n    label: 'But',\n    color: '#f6e6e6'\n  },\n  however: {\n    label: 'However',\n    color: '#e6e6f6'\n  }\n};\n\n// Custom node component\nconst CustomNode = ({\n  data,\n  id\n}) => {\n  _s();\n  var _nodeStyles$data$type, _nodeStyles$data$type2;\n  const [isEditing, setIsEditing] = useState(false);\n  const [nodeText, setNodeText] = useState(data.label);\n  const [showControls, setShowControls] = useState(false);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [colorTarget, setColorTarget] = useState(null); // 'background' or 'text'\n  const inputRef = useRef(null);\n  const nodeRef = useRef(null);\n  const {\n    updateNodeText,\n    nodeStyles,\n    updateNodeStyle,\n    deleteNode\n  } = useContext(AppContext);\n\n  // Get the appropriate color based on node type and custom styles\n  const nodeColor = ((_nodeStyles$data$type = nodeStyles[data.type]) === null || _nodeStyles$data$type === void 0 ? void 0 : _nodeStyles$data$type.background) || NODE_TYPES[data.type].color;\n  const textColor = ((_nodeStyles$data$type2 = nodeStyles[data.type]) === null || _nodeStyles$data$type2 === void 0 ? void 0 : _nodeStyles$data$type2.text) || '#000000';\n  const handleDoubleClick = () => {\n    setIsEditing(true);\n    setTimeout(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 0);\n  };\n  const handleInputBlur = () => {\n    if (validateStatement(nodeText)) {\n      updateNodeText(id, nodeText);\n      setIsEditing(false);\n    } else {\n      alert('Please enter a valid statement (a complete sentence with at least 3 words).');\n      setNodeText(data.label);\n      setIsEditing(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleInputBlur();\n    }\n  };\n  const handleOpenColorPicker = target => {\n    setColorTarget(target);\n    setShowColorPicker(true);\n  };\n  const handleColorChange = color => {\n    if (colorTarget === 'background') {\n      updateNodeStyle(data.type, {\n        background: color,\n        text: textColor\n      });\n    } else if (colorTarget === 'text') {\n      updateNodeStyle(data.type, {\n        background: nodeColor,\n        text: color\n      });\n    }\n  };\n  const handleDeleteNode = () => {\n    if (window.confirm('Are you sure you want to delete this node?')) {\n      deleteNode(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: nodeRef,\n    className: \"node-wrapper\",\n    style: {\n      background: nodeColor,\n      borderRadius: '8px',\n      padding: '16px',\n      paddingRight: showControls ? '36px' : '16px',\n      minWidth: '250px',\n      maxWidth: '400px',\n      boxShadow: '0 3px 5px rgba(0, 0, 0, 0.15)',\n      border: `2px solid ${data.selected ? '#1a73e8' : 'transparent'}`,\n      position: 'relative',\n      wordBreak: 'break-word',\n      color: textColor\n    },\n    onDoubleClick: handleDoubleClick,\n    onMouseEnter: () => setShowControls(true),\n    onMouseLeave: () => setShowControls(false),\n    children: [showControls && !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-color-controls\",\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '0',\n        bottom: '0',\n        width: '28px',\n        borderLeft: '1px solid rgba(0,0,0,0.1)',\n        borderTopRightRadius: '8px',\n        borderBottomRightRadius: '8px',\n        display: 'flex',\n        flexDirection: 'column',\n        background: 'rgba(0,0,0,0.1)',\n        padding: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOpenColorPicker('background'),\n        style: {\n          width: '20px',\n          height: '20px',\n          margin: '4px 0',\n          background: nodeColor,\n          border: '1px solid white',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.2)'\n        },\n        title: \"Change background color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOpenColorPicker('text'),\n        style: {\n          width: '20px',\n          height: '20px',\n          margin: '4px 0',\n          background: textColor,\n          border: '1px solid white',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.2)'\n        },\n        title: \"Change text color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteNode,\n        style: {\n          width: '20px',\n          height: '20px',\n          margin: '4px 0',\n          marginTop: 'auto',\n          background: 'rgba(255,80,80,0.8)',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          color: 'white',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '14px'\n        },\n        title: \"Delete node\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), showColorPicker && /*#__PURE__*/_jsxDEV(ColorPickerPopup, {\n      initialColor: colorTarget === 'background' ? nodeColor : textColor,\n      onColorChange: handleColorChange,\n      onClose: () => setShowColorPicker(false),\n      title: colorTarget === 'background' ? 'Background Color' : 'Text Color'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-header\",\n      style: {\n        fontWeight: 'bold',\n        marginBottom: '12px',\n        fontSize: '16px',\n        textAlign: 'center'\n      },\n      children: NODE_TYPES[data.type].label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      value: nodeText,\n      onChange: e => setNodeText(e.target.value),\n      onBlur: handleInputBlur,\n      onKeyDown: handleKeyDown,\n      style: {\n        width: '100%',\n        padding: '8px',\n        borderRadius: '4px',\n        border: '1px solid #ccc',\n        marginBottom: '12px',\n        fontSize: '14px',\n        color: '#000'\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-content\",\n      style: {\n        marginBottom: '16px',\n        fontSize: '14px',\n        lineHeight: '1.5',\n        textAlign: 'center'\n      },\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-buttons\",\n      style: {\n        display: 'flex',\n        gap: '12px',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.addNodeToArgumentMap(id, 'because'),\n        style: {\n          padding: '6px 12px',\n          borderRadius: '4px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: 'none',\n          background: 'rgba(255,255,255,0.2)',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        },\n        title: \"Add a supporting point\",\n        children: \"\\uD83D\\uDC4D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.addNodeToArgumentMap(id, 'but'),\n        style: {\n          padding: '6px 12px',\n          borderRadius: '4px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: 'none',\n          background: 'rgba(255,255,255,0.2)',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        },\n        title: \"Add a counterargument\",\n        children: \"\\uD83D\\uDC4E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.addNodeToArgumentMap(id, 'however'),\n        style: {\n          padding: '6px 12px',\n          borderRadius: '4px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: 'none',\n          background: 'rgba(255,255,255,0.2)',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        },\n        title: \"Add an exploration\",\n        children: \"\\u270B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n// Main ArgumentMap component\n_s(CustomNode, \"SatHb0a9EsnaaGO6y+uApsFNM+I=\");\n_c = CustomNode;\nconst ArgumentMap = ({\n  initialResolution\n}) => {\n  _s2();\n  const {\n    saveWipState,\n    loadWipState,\n    nodeStyles,\n    setCurrentMap\n  } = useContext(AppContext);\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      const initialNodes = [{\n        id: '1',\n        type: 'default',\n        position: {\n          x: 250,\n          y: 25\n        },\n        data: {\n          label: initialResolution,\n          type: 'resolution'\n        }\n      }];\n      setNodes(initialNodes);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({\n        nodes,\n        edges\n      });\n      saveWipState({\n        nodes,\n        edges\n      });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) return;\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'default',\n      position: {\n        x: parentNode.position.x + Math.random() * 50 - 25,\n        y: parentNode.position.y + 150\n      },\n      data: {\n        label: `Enter your ${nodeType} statement`,\n        type: nodeType\n      }\n    };\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n  }, [nodes, setNodes, setEdges]);\n\n  // Set the context for NodeButton component\n  useEffect(() => {\n    // Register addNode function to be accessible by NodeButton\n    window.addNodeToArgumentMap = addNode;\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({\n        nodes,\n        edges,\n        styles: nodeStyles\n      }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async event => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes(prevNodes => prevNodes.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n  }, [setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"argument-map-container\",\n    style: {\n      height: 'calc(100vh - 150px)',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"argument-map-actions\",\n      style: {\n        display: 'flex',\n        gap: '10px',\n        position: 'absolute',\n        zIndex: 5,\n        top: '10px',\n        left: '10px',\n        background: 'rgba(255, 255, 255, 0.8)',\n        padding: '5px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportImage,\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Export as PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportTrie,\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Export as .trie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"import-button\",\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          margin: 0\n        },\n        children: [\"Import .trie\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".trie\",\n          onChange: handleImportTrie,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onInit: setReactFlowInstance,\n        onNodeDragStop: onNodeDragStop,\n        nodeTypes: {\n          default: CustomNode\n        },\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#f8f8f8\",\n          variant: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n};\n_s2(ArgumentMap, \"Bof5zJLQFe1FrRx5cWfrfvlks0g=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = ArgumentMap;\nexport default ArgumentMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"ArgumentMap\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useContext","useEffect","ReactFlow","addEdge","Controls","Background","useNodesState","useEdgesState","MarkerType","AppContext","NodeButton","ColorPickerPopup","validateStatement","exportToImage","exportToTrie","importFromTrie","jsxDEV","_jsxDEV","NODE_TYPES","resolution","label","color","because","but","however","CustomNode","data","id","_s","_nodeStyles$data$type","_nodeStyles$data$type2","isEditing","setIsEditing","nodeText","setNodeText","showControls","setShowControls","showColorPicker","setShowColorPicker","colorTarget","setColorTarget","inputRef","nodeRef","updateNodeText","nodeStyles","updateNodeStyle","deleteNode","nodeColor","type","background","textColor","text","handleDoubleClick","setTimeout","current","focus","handleInputBlur","alert","handleKeyDown","e","key","handleOpenColorPicker","target","handleColorChange","handleDeleteNode","window","confirm","ref","className","style","borderRadius","padding","paddingRight","minWidth","maxWidth","boxShadow","border","selected","position","wordBreak","onDoubleClick","onMouseEnter","onMouseLeave","children","top","right","bottom","width","borderLeft","borderTopRightRadius","borderBottomRightRadius","display","flexDirection","onClick","height","margin","cursor","title","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","alignItems","justifyContent","fontSize","initialColor","onColorChange","onClose","fontWeight","marginBottom","textAlign","value","onChange","onBlur","onKeyDown","autoFocus","lineHeight","gap","addNodeToArgumentMap","_c","ArgumentMap","initialResolution","_s2","saveWipState","loadWipState","setCurrentMap","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","length","initialNodes","x","y","savedState","addNode","parentId","nodeType","parentNode","find","node","newNodeId","toString","newNode","Math","random","newEdge","source","markerEnd","ArrowClosed","nds","eds","onConnect","params","handleExportImage","handleExportTrie","styles","handleImportTrie","event","file","files","importedData","error","console","onNodeDragStop","_","prevNodes","map","n","zIndex","left","backgroundColor","accept","onInit","nodeTypes","default","fitView","variant","_c2","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { \n  addEdge, \n  Controls, \n  Background, \n  useNodesState, \n  useEdgesState, \n  MarkerType \n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport NodeButton from './NodeButton';\nimport ColorPickerPopup from './ColorPickerPopup';\nimport { validateStatement } from '../../utils/validationUtils';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\n// Define node types and their default colors\nconst NODE_TYPES = {\n  resolution: { label: 'Resolution', color: '#f0e6f6' },\n  because: { label: 'Because', color: '#e6f6e6' },\n  but: { label: 'But', color: '#f6e6e6' },\n  however: { label: 'However', color: '#e6e6f6' }\n};\n\n// Custom node component\nconst CustomNode = ({ data, id }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [nodeText, setNodeText] = useState(data.label);\n  const [showControls, setShowControls] = useState(false);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [colorTarget, setColorTarget] = useState(null); // 'background' or 'text'\n  const inputRef = useRef(null);\n  const nodeRef = useRef(null);\n  const { updateNodeText, nodeStyles, updateNodeStyle, deleteNode } = useContext(AppContext);\n\n  // Get the appropriate color based on node type and custom styles\n  const nodeColor = nodeStyles[data.type]?.background || NODE_TYPES[data.type].color;\n  const textColor = nodeStyles[data.type]?.text || '#000000';\n\n  const handleDoubleClick = () => {\n    setIsEditing(true);\n    setTimeout(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 0);\n  };\n\n  const handleInputBlur = () => {\n    if (validateStatement(nodeText)) {\n      updateNodeText(id, nodeText);\n      setIsEditing(false);\n    } else {\n      alert('Please enter a valid statement (a complete sentence with at least 3 words).');\n      setNodeText(data.label);\n      setIsEditing(false);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleInputBlur();\n    }\n  };\n\n  const handleOpenColorPicker = (target) => {\n    setColorTarget(target);\n    setShowColorPicker(true);\n  };\n\n  const handleColorChange = (color) => {\n    if (colorTarget === 'background') {\n      updateNodeStyle(data.type, { background: color, text: textColor });\n    } else if (colorTarget === 'text') {\n      updateNodeStyle(data.type, { background: nodeColor, text: color });\n    }\n  };\n\n  const handleDeleteNode = () => {\n    if (window.confirm('Are you sure you want to delete this node?')) {\n      deleteNode(id);\n    }\n  };\n\n  return (\n    <div \n      ref={nodeRef}\n      className=\"node-wrapper\"\n      style={{ \n        background: nodeColor,\n        borderRadius: '8px',\n        padding: '16px', \n        paddingRight: showControls ? '36px' : '16px',\n        minWidth: '250px',\n        maxWidth: '400px',\n        boxShadow: '0 3px 5px rgba(0, 0, 0, 0.15)',\n        border: `2px solid ${data.selected ? '#1a73e8' : 'transparent'}`,\n        position: 'relative',\n        wordBreak: 'break-word',\n        color: textColor\n      }}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={() => setShowControls(true)}\n      onMouseLeave={() => setShowControls(false)}\n    >\n      {/* Color controls sidebar */}\n      {showControls && !isEditing && (\n        <div className=\"node-color-controls\" style={{\n          position: 'absolute',\n          top: '0',\n          right: '0',\n          bottom: '0',\n          width: '28px',\n          borderLeft: '1px solid rgba(0,0,0,0.1)',\n          borderTopRightRadius: '8px',\n          borderBottomRightRadius: '8px',\n          display: 'flex',\n          flexDirection: 'column',\n          background: 'rgba(0,0,0,0.1)',\n          padding: '4px'\n        }}>\n          {/* Background color button */}\n          <button\n            onClick={() => handleOpenColorPicker('background')}\n            style={{\n              width: '20px',\n              height: '20px',\n              margin: '4px 0',\n              background: nodeColor,\n              border: '1px solid white',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.2)'\n            }}\n            title=\"Change background color\"\n          ></button>\n          \n          {/* Text color button */}\n          <button\n            onClick={() => handleOpenColorPicker('text')}\n            style={{\n              width: '20px',\n              height: '20px',\n              margin: '4px 0',\n              background: textColor,\n              border: '1px solid white',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.2)'\n            }}\n            title=\"Change text color\"\n          ></button>\n          \n          {/* Delete node button */}\n          <button\n            onClick={handleDeleteNode}\n            style={{\n              width: '20px',\n              height: '20px',\n              margin: '4px 0',\n              marginTop: 'auto',\n              background: 'rgba(255,80,80,0.8)',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '14px'\n            }}\n            title=\"Delete node\"\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      {/* Color picker popup */}\n      {showColorPicker && (\n        <ColorPickerPopup\n          initialColor={colorTarget === 'background' ? nodeColor : textColor}\n          onColorChange={handleColorChange}\n          onClose={() => setShowColorPicker(false)}\n          title={colorTarget === 'background' ? 'Background Color' : 'Text Color'}\n        />\n      )}\n\n      <div className=\"node-header\" style={{ \n        fontWeight: 'bold', \n        marginBottom: '12px', \n        fontSize: '16px',\n        textAlign: 'center'\n      }}>\n        {NODE_TYPES[data.type].label}\n      </div>\n      \n      {isEditing ? (\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={nodeText}\n          onChange={(e) => setNodeText(e.target.value)}\n          onBlur={handleInputBlur}\n          onKeyDown={handleKeyDown}\n          style={{ \n            width: '100%', \n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc',\n            marginBottom: '12px',\n            fontSize: '14px',\n            color: '#000'\n          }}\n          autoFocus\n        />\n      ) : (\n        <div className=\"node-content\" style={{ \n          marginBottom: '16px',\n          fontSize: '14px', \n          lineHeight: '1.5',\n          textAlign: 'center'\n        }}>\n          {data.label}\n        </div>\n      )}\n\n      {/* Buttons container with emojis */}\n      {!isEditing && (\n        <div className=\"node-buttons\" style={{ \n          display: 'flex', \n          gap: '12px',\n          justifyContent: 'center'\n        }}>\n          <button\n            onClick={() => window.addNodeToArgumentMap(id, 'because')}\n            style={{\n              padding: '6px 12px',\n              borderRadius: '4px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              border: 'none',\n              background: 'rgba(255,255,255,0.2)',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n            }}\n            title=\"Add a supporting point\"\n          >\n            👍\n          </button>\n          <button\n            onClick={() => window.addNodeToArgumentMap(id, 'but')}\n            style={{\n              padding: '6px 12px',\n              borderRadius: '4px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              border: 'none',\n              background: 'rgba(255,255,255,0.2)',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n            }}\n            title=\"Add a counterargument\"\n          >\n            👎\n          </button>\n          <button\n            onClick={() => window.addNodeToArgumentMap(id, 'however')}\n            style={{\n              padding: '6px 12px',\n              borderRadius: '4px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              border: 'none',\n              background: 'rgba(255,255,255,0.2)',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n            }}\n            title=\"Add an exploration\"\n          >\n            ✋\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Main ArgumentMap component\nconst ArgumentMap = ({ initialResolution }) => {\n  const { \n    saveWipState, \n    loadWipState, \n    nodeStyles, \n    setCurrentMap \n  } = useContext(AppContext);\n  \n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      const initialNodes = [\n        {\n          id: '1',\n          type: 'default',\n          position: { x: 250, y: 25 },\n          data: { \n            label: initialResolution,\n            type: 'resolution',\n          },\n        },\n      ];\n      setNodes(initialNodes);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({ nodes, edges });\n      saveWipState({ nodes, edges });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) return;\n\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'default',\n      position: { \n        x: parentNode.position.x + (Math.random() * 50) - 25,\n        y: parentNode.position.y + 150\n      },\n      data: { \n        label: `Enter your ${nodeType} statement`,\n        type: nodeType,\n      },\n    };\n\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n      },\n    };\n\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n  }, [nodes, setNodes, setEdges]);\n\n  // Set the context for NodeButton component\n  useEffect(() => {\n    // Register addNode function to be accessible by NodeButton\n    window.addNodeToArgumentMap = addNode;\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({ nodes, edges, styles: nodeStyles }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async (event) => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      \n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes((prevNodes) =>\n      prevNodes.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\n    );\n  }, [setNodes]);\n\n  return (\n    <div className=\"argument-map-container\" style={{ height: 'calc(100vh - 150px)', width: '100%' }}>\n      <div className=\"argument-map-actions\" style={{ \n        display: 'flex', \n        gap: '10px',\n        position: 'absolute',\n        zIndex: 5,\n        top: '10px',\n        left: '10px',\n        background: 'rgba(255, 255, 255, 0.8)',\n        padding: '5px',\n        borderRadius: '4px'\n      }}>\n        <button \n          onClick={handleExportImage}\n          style={{\n            padding: '5px 10px',\n            fontSize: '12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >Export as PNG</button>\n        <button \n          onClick={handleExportTrie}\n          style={{\n            padding: '5px 10px',\n            fontSize: '12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >Export as .trie</button>\n        <label className=\"import-button\" style={{ \n          padding: '5px 10px', \n          fontSize: '12px',\n          backgroundColor: '#f0f0f0', \n          borderRadius: '4px', \n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          margin: 0\n        }}>\n          Import .trie\n          <input \n            type=\"file\" \n            accept=\".trie\" \n            onChange={handleImportTrie} \n            style={{ display: 'none' }} \n          />\n        </label>\n      </div>\n\n      <div ref={reactFlowWrapper} style={{ height: '100%', width: '100%' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onInit={setReactFlowInstance}\n          onNodeDragStop={onNodeDragStop}\n          nodeTypes={{ default: CustomNode }}\n          fitView\n        >\n          <Controls />\n          <Background color=\"#f8f8f8\" variant=\"dots\" />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default ArgumentMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}