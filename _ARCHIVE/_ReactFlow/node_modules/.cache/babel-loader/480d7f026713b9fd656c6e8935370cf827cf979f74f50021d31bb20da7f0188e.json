{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { addEdge, Controls, Background, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"ArgumentMap component loaded\");\n\n// Main ArgumentMap component\nconst ArgumentMap = ({\n  initialResolution\n}) => {\n  _s();\n  const {\n    saveWipState,\n    loadWipState,\n    nodeStyles,\n    setCurrentMap,\n    deleteNode\n  } = useContext(AppContext);\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      const initialNodes = [{\n        id: '1',\n        type: 'default',\n        position: {\n          x: 250,\n          y: 25\n        },\n        data: {\n          label: initialResolution,\n          type: 'resolution'\n        }\n      }];\n      setNodes(initialNodes);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({\n        nodes,\n        edges\n      });\n      saveWipState({\n        nodes,\n        edges\n      });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(\"ADDING NODE:\", parentId, nodeType);\n\n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found:\", parentId);\n      return;\n    }\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'default',\n      position: {\n        x: parentNode.position.x + Math.random() * 50 - 25,\n        y: parentNode.position.y + 150\n      },\n      data: {\n        label: `Enter your ${nodeType} statement`,\n        type: nodeType\n      }\n    };\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    };\n    console.log(\"Creating new node:\", newNode);\n    console.log(\"Creating new edge:\", newEdge);\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    console.log(\"Nodes after update:\", nodes.length + 1);\n  }, [nodes, setNodes, setEdges]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({\n        nodes,\n        edges,\n        styles: nodeStyles\n      }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async event => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes(prevNodes => prevNodes.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n  }, [setNodes]);\n\n  // Define the custom node type with direct access to the addNode function\n  const nodeTypes = {\n    default: props => /*#__PURE__*/_jsxDEV(CustomNode, {\n      ...props,\n      onAddChild: addNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"argument-map-container\",\n    style: {\n      height: 'calc(100vh - 150px)',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"argument-map-actions\",\n      style: {\n        display: 'flex',\n        gap: '10px',\n        position: 'absolute',\n        zIndex: 5,\n        top: '10px',\n        left: '10px',\n        background: 'rgba(255, 255, 255, 0.8)',\n        padding: '5px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportImage,\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Export as PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportTrie,\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Export as .trie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"import-button\",\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          margin: 0\n        },\n        children: [\"Import .trie\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".trie\",\n          onChange: handleImportTrie,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onInit: setReactFlowInstance,\n        onNodeDragStop: onNodeDragStop,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#f8f8f8\",\n          variant: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(ArgumentMap, \"4p5u9Y4Kcy4an0TasRcJJ9GUUFA=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ArgumentMap;\nexport default ArgumentMap;\nvar _c;\n$RefreshReg$(_c, \"ArgumentMap\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useContext","useEffect","ReactFlow","addEdge","Controls","Background","useNodesState","useEdgesState","MarkerType","AppContext","CustomNode","exportToImage","exportToTrie","importFromTrie","jsxDEV","_jsxDEV","console","log","ArgumentMap","initialResolution","_s","saveWipState","loadWipState","nodeStyles","setCurrentMap","deleteNode","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","length","initialNodes","id","type","position","x","y","data","label","savedState","addNode","parentId","nodeType","parentNode","find","node","error","newNodeId","toString","newNode","Math","random","newEdge","source","target","markerEnd","ArrowClosed","nds","eds","onConnect","params","handleExportImage","current","handleExportTrie","styles","handleImportTrie","event","file","files","importedData","alert","onNodeDragStop","_","prevNodes","map","n","nodeTypes","default","props","onAddChild","fileName","_jsxFileName","lineNumber","columnNumber","className","style","height","width","children","display","gap","zIndex","top","left","background","padding","borderRadius","onClick","fontSize","backgroundColor","border","cursor","margin","accept","onChange","ref","onInit","fitView","color","variant","_c","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { \n  addEdge, \n  Controls, \n  Background, \n  useNodesState, \n  useEdgesState, \n  MarkerType \n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\nconsole.log(\"ArgumentMap component loaded\");\n\n// Main ArgumentMap component\nconst ArgumentMap = ({ initialResolution }) => {\n  const { \n    saveWipState, \n    loadWipState, \n    nodeStyles, \n    setCurrentMap,\n    deleteNode \n  } = useContext(AppContext);\n  \n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      const initialNodes = [\n        {\n          id: '1',\n          type: 'default',\n          position: { x: 250, y: 25 },\n          data: { \n            label: initialResolution,\n            type: 'resolution',\n          },\n        },\n      ];\n      setNodes(initialNodes);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({ nodes, edges });\n      saveWipState({ nodes, edges });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(\"ADDING NODE:\", parentId, nodeType);\n    \n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found:\", parentId);\n      return;\n    }\n\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'default',\n      position: { \n        x: parentNode.position.x + (Math.random() * 50) - 25,\n        y: parentNode.position.y + 150\n      },\n      data: { \n        label: `Enter your ${nodeType} statement`,\n        type: nodeType,\n      },\n    };\n\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n      },\n    };\n\n    console.log(\"Creating new node:\", newNode);\n    console.log(\"Creating new edge:\", newEdge);\n\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    \n    console.log(\"Nodes after update:\", nodes.length + 1);\n  }, [nodes, setNodes, setEdges]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({ nodes, edges, styles: nodeStyles }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async (event) => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      \n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes((prevNodes) =>\n      prevNodes.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\n    );\n  }, [setNodes]);\n\n  // Define the custom node type with direct access to the addNode function\n  const nodeTypes = {\n    default: (props) => <CustomNode {...props} onAddChild={addNode} />\n  };\n\n  return (\n    <div className=\"argument-map-container\" style={{ height: 'calc(100vh - 150px)', width: '100%' }}>\n      <div className=\"argument-map-actions\" style={{ \n        display: 'flex', \n        gap: '10px',\n        position: 'absolute',\n        zIndex: 5,\n        top: '10px',\n        left: '10px',\n        background: 'rgba(255, 255, 255, 0.8)',\n        padding: '5px',\n        borderRadius: '4px'\n      }}>\n        <button \n          onClick={handleExportImage}\n          style={{\n            padding: '5px 10px',\n            fontSize: '12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >Export as PNG</button>\n        <button \n          onClick={handleExportTrie}\n          style={{\n            padding: '5px 10px',\n            fontSize: '12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >Export as .trie</button>\n        <label className=\"import-button\" style={{ \n          padding: '5px 10px', \n          fontSize: '12px',\n          backgroundColor: '#f0f0f0', \n          borderRadius: '4px', \n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          margin: 0\n        }}>\n          Import .trie\n          <input \n            type=\"file\" \n            accept=\".trie\" \n            onChange={handleImportTrie} \n            style={{ display: 'none' }} \n          />\n        </label>\n      </div>\n\n      <div ref={reactFlowWrapper} style={{ height: '100%', width: '100%' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onInit={setReactFlowInstance}\n          onNodeDragStop={onNodeDragStop}\n          nodeTypes={nodeTypes}\n          fitView\n        >\n          <Controls />\n          <Background color=\"#f8f8f8\" variant=\"dots\" />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default ArgumentMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}