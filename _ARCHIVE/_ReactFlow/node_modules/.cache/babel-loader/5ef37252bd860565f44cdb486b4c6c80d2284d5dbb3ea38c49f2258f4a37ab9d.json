{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { addEdge, Controls, Background, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { validateStatement } from '../../utils/validationUtils';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\n// Main ArgumentMap component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArgumentMap = ({\n  initialResolution\n}) => {\n  _s();\n  const {\n    saveWipState,\n    loadWipState,\n    nodeStyles,\n    setCurrentMap,\n    deleteNode\n  } = useContext(AppContext);\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      const initialNodes = [{\n        id: '1',\n        type: 'default',\n        position: {\n          x: 250,\n          y: 25\n        },\n        data: {\n          label: initialResolution,\n          type: 'resolution'\n        }\n      }];\n      setNodes(initialNodes);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({\n        nodes,\n        edges\n      });\n      saveWipState({\n        nodes,\n        edges\n      });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(`Adding ${nodeType} node to parent:`, parentId);\n\n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found:\", parentId);\n      return;\n    }\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'default',\n      position: {\n        x: parentNode.position.x + Math.random() * 50 - 25,\n        y: parentNode.position.y + 150\n      },\n      data: {\n        label: `Enter your ${nodeType} statement`,\n        type: nodeType\n      }\n    };\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    console.log(\"New node created:\", newNode);\n  }, [nodes, setNodes, setEdges]);\n\n  // Make the addNode function globally available for node buttons\n  useEffect(() => {\n    console.log(\"Setting up global addNodeToArgumentMap function\");\n    window.addNodeToArgumentMap = addNode;\n\n    // Cleanup when component unmounts\n    return () => {\n      console.log(\"Cleaning up global addNodeToArgumentMap function\");\n      delete window.addNodeToArgumentMap;\n    };\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({\n        nodes,\n        edges,\n        styles: nodeStyles\n      }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async event => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes(prevNodes => prevNodes.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n  }, [setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"argument-map-container\",\n    style: {\n      height: 'calc(100vh - 150px)',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"argument-map-actions\",\n      style: {\n        display: 'flex',\n        gap: '10px',\n        position: 'absolute',\n        zIndex: 5,\n        top: '10px',\n        left: '10px',\n        background: 'rgba(255, 255, 255, 0.8)',\n        padding: '5px',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportImage,\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Export as PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportTrie,\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Export as .trie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"import-button\",\n        style: {\n          padding: '5px 10px',\n          fontSize: '12px',\n          backgroundColor: '#f0f0f0',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          margin: 0\n        },\n        children: [\"Import .trie\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".trie\",\n          onChange: handleImportTrie,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onInit: setReactFlowInstance,\n        onNodeDragStop: onNodeDragStop,\n        nodeTypes: {\n          default: CustomNode\n        },\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#f8f8f8\",\n          variant: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(ArgumentMap, \"Zz+sAoLXogbTH6bVG7mX32xJWds=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ArgumentMap;\nexport default ArgumentMap;\nvar _c;\n$RefreshReg$(_c, \"ArgumentMap\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useContext","useEffect","ReactFlow","addEdge","Controls","Background","useNodesState","useEdgesState","MarkerType","AppContext","CustomNode","validateStatement","exportToImage","exportToTrie","importFromTrie","jsxDEV","_jsxDEV","ArgumentMap","initialResolution","_s","saveWipState","loadWipState","nodeStyles","setCurrentMap","deleteNode","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","length","initialNodes","id","type","position","x","y","data","label","savedState","addNode","parentId","nodeType","console","log","parentNode","find","node","error","newNodeId","toString","newNode","Math","random","newEdge","source","target","markerEnd","ArrowClosed","nds","eds","window","addNodeToArgumentMap","onConnect","params","handleExportImage","current","handleExportTrie","styles","handleImportTrie","event","file","files","importedData","alert","onNodeDragStop","_","prevNodes","map","n","className","style","height","width","children","display","gap","zIndex","top","left","background","padding","borderRadius","onClick","fontSize","backgroundColor","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","margin","accept","onChange","ref","onInit","nodeTypes","default","fitView","color","variant","_c","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { \n  addEdge, \n  Controls, \n  Background, \n  useNodesState, \n  useEdgesState, \n  MarkerType \n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { validateStatement } from '../../utils/validationUtils';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\n// Main ArgumentMap component\nconst ArgumentMap = ({ initialResolution }) => {\n  const { \n    saveWipState, \n    loadWipState, \n    nodeStyles, \n    setCurrentMap,\n    deleteNode \n  } = useContext(AppContext);\n  \n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      const initialNodes = [\n        {\n          id: '1',\n          type: 'default',\n          position: { x: 250, y: 25 },\n          data: { \n            label: initialResolution,\n            type: 'resolution',\n          },\n        },\n      ];\n      setNodes(initialNodes);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({ nodes, edges });\n      saveWipState({ nodes, edges });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(`Adding ${nodeType} node to parent:`, parentId);\n    \n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found:\", parentId);\n      return;\n    }\n\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'default',\n      position: { \n        x: parentNode.position.x + (Math.random() * 50) - 25,\n        y: parentNode.position.y + 150\n      },\n      data: { \n        label: `Enter your ${nodeType} statement`,\n        type: nodeType,\n      },\n    };\n\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n      },\n    };\n\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    \n    console.log(\"New node created:\", newNode);\n  }, [nodes, setNodes, setEdges]);\n\n  // Make the addNode function globally available for node buttons\n  useEffect(() => {\n    console.log(\"Setting up global addNodeToArgumentMap function\");\n    window.addNodeToArgumentMap = addNode;\n    \n    // Cleanup when component unmounts\n    return () => {\n      console.log(\"Cleaning up global addNodeToArgumentMap function\");\n      delete window.addNodeToArgumentMap;\n    };\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({ nodes, edges, styles: nodeStyles }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async (event) => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      \n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes((prevNodes) =>\n      prevNodes.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\n    );\n  }, [setNodes]);\n\n  return (\n    <div className=\"argument-map-container\" style={{ height: 'calc(100vh - 150px)', width: '100%' }}>\n      <div className=\"argument-map-actions\" style={{ \n        display: 'flex', \n        gap: '10px',\n        position: 'absolute',\n        zIndex: 5,\n        top: '10px',\n        left: '10px',\n        background: 'rgba(255, 255, 255, 0.8)',\n        padding: '5px',\n        borderRadius: '4px'\n      }}>\n        <button \n          onClick={handleExportImage}\n          style={{\n            padding: '5px 10px',\n            fontSize: '12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >Export as PNG</button>\n        <button \n          onClick={handleExportTrie}\n          style={{\n            padding: '5px 10px',\n            fontSize: '12px',\n            backgroundColor: '#f0f0f0',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >Export as .trie</button>\n        <label className=\"import-button\" style={{ \n          padding: '5px 10px', \n          fontSize: '12px',\n          backgroundColor: '#f0f0f0', \n          borderRadius: '4px', \n          cursor: 'pointer',\n          border: '1px solid #ccc',\n          margin: 0\n        }}>\n          Import .trie\n          <input \n            type=\"file\" \n            accept=\".trie\" \n            onChange={handleImportTrie} \n            style={{ display: 'none' }} \n          />\n        </label>\n      </div>\n\n      <div ref={reactFlowWrapper} style={{ height: '100%', width: '100%' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onInit={setReactFlowInstance}\n          onNodeDragStop={onNodeDragStop}\n          nodeTypes={{ default: CustomNode }}\n          fitView\n        >\n          <Controls />\n          <Background color=\"#f8f8f8\" variant=\"dots\" />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default ArgumentMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}