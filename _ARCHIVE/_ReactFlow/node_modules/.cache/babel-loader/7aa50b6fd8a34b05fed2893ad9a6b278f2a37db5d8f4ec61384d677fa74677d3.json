{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { addEdge, Controls, Background, useNodesState, useEdgesState, MarkerType, Panel } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\n// Main ArgumentMap component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArgumentMap = ({\n  initialResolution\n}) => {\n  _s();\n  const {\n    saveWipState,\n    loadWipState,\n    nodeStyles,\n    setCurrentMap,\n    deleteNode\n  } = useContext(AppContext);\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      // Start with a delay to ensure container is ready\n      setTimeout(() => {\n        const initialNodes = [{\n          id: '1',\n          type: 'custom',\n          position: {\n            x: 350,\n            y: 50\n          },\n          data: {\n            label: initialResolution,\n            type: 'resolution'\n          }\n        }];\n        setNodes(initialNodes);\n      }, 100);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({\n        nodes,\n        edges\n      });\n      saveWipState({\n        nodes,\n        edges\n      });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    var _nodeStyles$nodeType;\n    console.log(\"ADDING NODE:\", parentId, nodeType);\n\n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found:\", parentId);\n      return;\n    }\n\n    // Count existing children to calculate position\n    const existingChildren = edges.filter(edge => edge.source === parentId).length;\n\n    // Calculate horizontal offset based on number of children\n    // First child is centered, subsequent children are offset left/right\n    let xOffset = 0;\n    if (existingChildren > 0) {\n      // Alternate left and right for odd/even children\n      const direction = existingChildren % 2 === 0 ? 1 : -1;\n      // Increase offset for each pair of children\n      const magnitude = Math.ceil(existingChildren / 2) * 200;\n      xOffset = direction * magnitude;\n    }\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: {\n        x: parentNode.position.x + xOffset,\n        y: parentNode.position.y + 180\n      },\n      data: {\n        label: `Enter your ${nodeType} statement`,\n        type: nodeType\n      }\n    };\n\n    // Get color for this node type (for edge color)\n    const nodeTypeColor = ((_nodeStyles$nodeType = nodeStyles[nodeType]) === null || _nodeStyles$nodeType === void 0 ? void 0 : _nodeStyles$nodeType.background) || '#cccccc';\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      animated: false,\n      style: {\n        stroke: nodeTypeColor,\n        strokeWidth: 2\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        color: nodeTypeColor\n      }\n    };\n    console.log(\"Creating new node:\", newNode);\n    console.log(\"Creating new edge:\", newEdge);\n\n    // Need to update both in one step\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n\n    // Fit view after adding nodes\n    setTimeout(() => {\n      if (reactFlowInstance) {\n        reactFlowInstance.fitView({\n          padding: 0.2\n        });\n      }\n    }, 50);\n  }, [nodes, edges, nodeStyles, setNodes, setEdges, reactFlowInstance]);\n\n  // Function to expose for child components\n  useEffect(() => {\n    // Make it a global function\n    window.addNodeToArgumentMap = addNode;\n\n    // Cleanup\n    return () => {\n      delete window.addNodeToArgumentMap;\n    };\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(params => setEdges(eds => addEdge({\n    ...params,\n    style: {\n      stroke: '#cccccc',\n      strokeWidth: 2\n    },\n    markerEnd: {\n      type: MarkerType.ArrowClosed\n    }\n  }, eds)), [setEdges]);\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({\n        nodes,\n        edges,\n        styles: nodeStyles\n      }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async event => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes(prevNodes => prevNodes.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n  }, [setNodes]);\n  const handleInit = instance => {\n    setReactFlowInstance(instance);\n\n    // Force a layout refresh on init\n    setTimeout(() => {\n      instance.fitView({\n        padding: 0.2\n      });\n      instance.zoomTo(1.0); // Set a fixed zoom level\n\n      // Center the viewport\n      if (nodes.length > 0) {\n        const node = nodes[0];\n        instance.setCenter(node.position.x, node.position.y);\n      }\n    }, 200);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '600px',\n      border: '1px solid #eee'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onInit: handleInit,\n        onNodeDragStop: onNodeDragStop,\n        nodeTypes: {\n          custom: CustomNode\n        },\n        fitView: true,\n        fitViewOptions: {\n          padding: 0.2\n        },\n        minZoom: 0.2,\n        maxZoom: 2,\n        defaultViewport: {\n          x: 0,\n          y: 0,\n          zoom: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls, {\n          position: \"bottom-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#f8f8f8\",\n          gap: 16,\n          size: 1,\n          variant: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Panel, {\n          position: \"top-left\",\n          style: {\n            margin: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              background: 'rgba(255, 255, 255, 0.8)',\n              padding: '5px',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExportImage,\n              style: {\n                padding: '5px 10px',\n                fontSize: '12px',\n                backgroundColor: '#f0f0f0',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Export as PNG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExportTrie,\n              style: {\n                padding: '5px 10px',\n                fontSize: '12px',\n                backgroundColor: '#f0f0f0',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Export as .trie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"import-button\",\n              style: {\n                padding: '5px 10px',\n                fontSize: '12px',\n                backgroundColor: '#f0f0f0',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                border: '1px solid #ccc',\n                margin: 0\n              },\n              children: [\"Import .trie\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".trie\",\n                onChange: handleImportTrie,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(ArgumentMap, \"Zz+sAoLXogbTH6bVG7mX32xJWds=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ArgumentMap;\nexport default ArgumentMap;\nvar _c;\n$RefreshReg$(_c, \"ArgumentMap\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useContext","useEffect","ReactFlow","addEdge","Controls","Background","useNodesState","useEdgesState","MarkerType","Panel","AppContext","CustomNode","exportToImage","exportToTrie","importFromTrie","jsxDEV","_jsxDEV","ArgumentMap","initialResolution","_s","saveWipState","loadWipState","nodeStyles","setCurrentMap","deleteNode","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","length","setTimeout","initialNodes","id","type","position","x","y","data","label","savedState","addNode","parentId","nodeType","_nodeStyles$nodeType","console","log","parentNode","find","node","error","existingChildren","filter","edge","source","xOffset","direction","magnitude","Math","ceil","newNodeId","toString","newNode","nodeTypeColor","background","newEdge","target","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","color","nds","eds","fitView","padding","window","addNodeToArgumentMap","onConnect","params","handleExportImage","current","handleExportTrie","styles","handleImportTrie","event","file","files","importedData","alert","onNodeDragStop","_","prevNodes","map","n","handleInit","instance","zoomTo","setCenter","width","height","border","children","ref","onInit","nodeTypes","custom","fitViewOptions","minZoom","maxZoom","defaultViewport","zoom","fileName","_jsxFileName","lineNumber","columnNumber","gap","size","variant","margin","display","borderRadius","onClick","fontSize","backgroundColor","cursor","className","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport ReactFlow, { \n  addEdge, \n  Controls, \n  Background, \n  useNodesState, \n  useEdgesState, \n  MarkerType,\n  Panel\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\n\n// Main ArgumentMap component\nconst ArgumentMap = ({ initialResolution }) => {\n  const { \n    saveWipState, \n    loadWipState, \n    nodeStyles, \n    setCurrentMap,\n    deleteNode \n  } = useContext(AppContext);\n  \n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      // Start with a delay to ensure container is ready\n      setTimeout(() => {\n        const initialNodes = [\n          {\n            id: '1',\n            type: 'custom',\n            position: { x: 350, y: 50 },\n            data: { \n              label: initialResolution,\n              type: 'resolution',\n            },\n          },\n        ];\n        setNodes(initialNodes);\n      }, 100);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({ nodes, edges });\n      saveWipState({ nodes, edges });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Add a new node connected to a parent node\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(\"ADDING NODE:\", parentId, nodeType);\n    \n    // Find the parent node to position the new node relatively\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found:\", parentId);\n      return;\n    }\n\n    // Count existing children to calculate position\n    const existingChildren = edges.filter(edge => edge.source === parentId).length;\n    \n    // Calculate horizontal offset based on number of children\n    // First child is centered, subsequent children are offset left/right\n    let xOffset = 0;\n    if (existingChildren > 0) {\n      // Alternate left and right for odd/even children\n      const direction = existingChildren % 2 === 0 ? 1 : -1;\n      // Increase offset for each pair of children\n      const magnitude = Math.ceil(existingChildren / 2) * 200;\n      xOffset = direction * magnitude;\n    }\n\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: { \n        x: parentNode.position.x + xOffset,\n        y: parentNode.position.y + 180\n      },\n      data: { \n        label: `Enter your ${nodeType} statement`,\n        type: nodeType,\n      },\n    };\n\n    // Get color for this node type (for edge color)\n    const nodeTypeColor = nodeStyles[nodeType]?.background || '#cccccc';\n    \n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      type: 'default',\n      animated: false,\n      style: { stroke: nodeTypeColor, strokeWidth: 2 },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        color: nodeTypeColor\n      },\n    };\n\n    console.log(\"Creating new node:\", newNode);\n    console.log(\"Creating new edge:\", newEdge);\n\n    // Need to update both in one step\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    \n    // Fit view after adding nodes\n    setTimeout(() => {\n      if (reactFlowInstance) {\n        reactFlowInstance.fitView({ padding: 0.2 });\n      }\n    }, 50);\n  }, [nodes, edges, nodeStyles, setNodes, setEdges, reactFlowInstance]);\n\n  // Function to expose for child components\n  useEffect(() => {\n    // Make it a global function\n    window.addNodeToArgumentMap = addNode;\n    \n    // Cleanup\n    return () => {\n      delete window.addNodeToArgumentMap;\n    };\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge({\n      ...params,\n      style: { stroke: '#cccccc', strokeWidth: 2 },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n      },\n    }, eds)),\n    [setEdges]\n  );\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({ nodes, edges, styles: nodeStyles }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async (event) => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      \n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes((prevNodes) =>\n      prevNodes.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\n    );\n  }, [setNodes]);\n\n  const handleInit = (instance) => {\n    setReactFlowInstance(instance);\n    \n    // Force a layout refresh on init\n    setTimeout(() => {\n      instance.fitView({ padding: 0.2 });\n      instance.zoomTo(1.0); // Set a fixed zoom level\n      \n      // Center the viewport\n      if (nodes.length > 0) {\n        const node = nodes[0];\n        instance.setCenter(node.position.x, node.position.y);\n      }\n    }, 200);\n  };\n\n  return (\n    <div style={{ width: '100%', height: '600px', border: '1px solid #eee' }}>\n      <div ref={reactFlowWrapper} style={{ width: '100%', height: '100%' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onInit={handleInit}\n          onNodeDragStop={onNodeDragStop}\n          nodeTypes={{ custom: CustomNode }}\n          fitView\n          fitViewOptions={{ padding: 0.2 }}\n          minZoom={0.2}\n          maxZoom={2}\n          defaultViewport={{ x: 0, y: 0, zoom: 1 }}\n        >\n          <Controls position=\"bottom-right\" />\n          <Background color=\"#f8f8f8\" gap={16} size={1} variant=\"dots\" />\n          \n          <Panel position=\"top-left\" style={{ margin: '10px' }}>\n            <div style={{ \n              display: 'flex', \n              gap: '10px',\n              background: 'rgba(255, 255, 255, 0.8)',\n              padding: '5px',\n              borderRadius: '4px'\n            }}>\n              <button \n                onClick={handleExportImage}\n                style={{\n                  padding: '5px 10px',\n                  fontSize: '12px',\n                  backgroundColor: '#f0f0f0',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >Export as PNG</button>\n              <button \n                onClick={handleExportTrie}\n                style={{\n                  padding: '5px 10px',\n                  fontSize: '12px',\n                  backgroundColor: '#f0f0f0',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >Export as .trie</button>\n              <label className=\"import-button\" style={{ \n                padding: '5px 10px', \n                fontSize: '12px',\n                backgroundColor: '#f0f0f0', \n                borderRadius: '4px', \n                cursor: 'pointer',\n                border: '1px solid #ccc',\n                margin: 0\n              }}>\n                Import .trie\n                <input \n                  type=\"file\" \n                  accept=\".trie\" \n                  onChange={handleImportTrie} \n                  style={{ display: 'none' }} \n                />\n              </label>\n            </div>\n          </Panel>\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default ArgumentMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}