{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport { ReactFlow, Controls, Background, useNodesState, useEdgesState, MarkerType, Panel, ConnectionLineType, ConnectionMode, useReactFlow } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\nimport { validateStatement } from '../../utils/validationUtils';\n\n// Main ArgumentMap component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArgumentMap = ({\n  initialResolution\n}) => {\n  _s();\n  const {\n    saveWipState,\n    loadWipState,\n    nodeStyles,\n    setCurrentMap,\n    deleteNode,\n    updateNodeText\n  } = useContext(AppContext);\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [nodeTypeSelector, setNodeTypeSelector] = useState(null);\n  const [connectionState, setConnectionState] = useState(null);\n  const {\n    project\n  } = useReactFlow();\n\n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      setTimeout(() => {\n        const initialNodes = [{\n          id: '1',\n          type: 'custom',\n          position: {\n            x: 350,\n            y: 50\n          },\n          data: {\n            label: initialResolution,\n            type: 'resolution'\n          }\n        }];\n        setNodes(initialNodes);\n      }, 100);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({\n        nodes,\n        edges\n      });\n      saveWipState({\n        nodes,\n        edges\n      });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Implement the addChildNode function for direct node creation from stance buttons\n  useEffect(() => {\n    if (reactFlowInstance) {\n      // Implementation of the addChildNode function\n      window.addChildNodeImpl = (parentId, nodeType) => {\n        var _nodeStyles$nodeType;\n        // Find the parent node\n        const parentNode = nodes.find(node => node.id === parentId);\n        if (!parentNode) return;\n\n        // Prompt for statement text\n        const statement = prompt(`Enter your ${nodeType} statement:`);\n\n        // Only proceed if valid text is entered\n        if (!statement) {\n          return;\n        }\n\n        // Generate a new node ID\n        const newNodeId = (nodes.length + 1).toString();\n\n        // Calculate position below parent node - much closer now\n        const newPosition = {\n          x: parentNode.position.x,\n          y: parentNode.position.y + 60 // Position much closer to parent node\n        };\n\n        // Create new node\n        const newNode = {\n          id: newNodeId,\n          type: 'custom',\n          position: newPosition,\n          data: {\n            label: statement,\n            type: nodeType\n          }\n        };\n\n        // Create connection (edge) from parent to new node\n        const nodeTypeColor = ((_nodeStyles$nodeType = nodeStyles[nodeType]) === null || _nodeStyles$nodeType === void 0 ? void 0 : _nodeStyles$nodeType.background) || '#cccccc';\n        const newEdge = {\n          id: `e${parentId}-${newNodeId}`,\n          source: parentId,\n          target: newNodeId,\n          type: 'default',\n          data: {\n            type: nodeType\n          },\n          style: {\n            stroke: nodeTypeColor,\n            strokeWidth: 2\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed,\n            color: nodeTypeColor\n          }\n        };\n\n        // Add new node and edge\n        setNodes(nds => [...nds, newNode]);\n        setEdges(eds => [...eds, newEdge]);\n\n        // Center view on the new node\n        setTimeout(() => {\n          reactFlowInstance.fitView({\n            padding: 0.2\n          });\n        }, 50);\n      };\n    }\n    return () => {\n      // Cleanup\n      window.addChildNodeImpl = undefined;\n    };\n  }, [reactFlowInstance, nodes, setNodes, setEdges, nodeStyles]);\n\n  // Start connection\n  const onConnectStart = useCallback((_, {\n    nodeId\n  }) => {\n    setConnectionState({\n      sourceId: nodeId\n    });\n  }, []);\n\n  // Handle connection end\n  const onConnectEnd = useCallback(event => {\n    if (!connectionState || !connectionState.sourceId) return;\n\n    // The position where the connection ends\n    const targetPosition = project({\n      x: event.clientX,\n      y: event.clientY\n    });\n\n    // Generate a new ID for the node\n    const newNodeId = (nodes.length + 1).toString();\n\n    // Create a new node at the position\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: targetPosition,\n      data: {\n        label: `Enter your statement`,\n        type: 'because' // Default, will be updated when user selects\n      }\n    };\n\n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n\n    // In onConnectEnd:\n    setNodeTypeSelector({\n      top: event.clientY,\n      left: event.clientX,\n      sourceId: connectionState.sourceId,\n      targetId: newNodeId,\n      selectedType: null,\n      statement: ''\n    });\n\n    // Reset the connection state\n    setConnectionState(null);\n  }, [connectionState, project, nodes.length, setNodes]);\n\n  // Create a new connection with the selected node type\n  const createConnection = useCallback((sourceId, targetId, nodeType) => {\n    var _nodeStyles$nodeType2;\n    // Prompt for statement text\n    const statement = prompt(`Enter your ${nodeType} statement:`);\n\n    // Only proceed if text is entered\n    if (!statement) {\n      // Remove the temporary node if canceled\n      setNodes(nds => nds.filter(node => node.id !== targetId));\n      setNodeTypeSelector(null);\n      return;\n    }\n\n    // Get color for this node type\n    const nodeTypeColor = ((_nodeStyles$nodeType2 = nodeStyles[nodeType]) === null || _nodeStyles$nodeType2 === void 0 ? void 0 : _nodeStyles$nodeType2.background) || '#cccccc';\n\n    // Add edge with appropriate styling\n    const newEdge = {\n      id: `e${sourceId}-${targetId}`,\n      source: sourceId,\n      target: targetId,\n      type: 'default',\n      data: {\n        type: nodeType\n      },\n      animated: false,\n      style: {\n        stroke: nodeTypeColor,\n        strokeWidth: 2\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        color: nodeTypeColor\n      }\n    };\n\n    // Update the target node type and statement\n    setNodes(nds => nds.map(node => {\n      if (node.id === targetId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            type: nodeType,\n            label: statement\n          }\n        };\n      }\n      return node;\n    }));\n    setEdges(eds => [...eds, newEdge]);\n\n    // Close the selector\n    setNodeTypeSelector(null);\n  }, [nodeStyles, setNodes, setEdges]);\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({\n        nodes,\n        edges,\n        styles: nodeStyles\n      }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async event => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes(prevNodes => prevNodes.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n  }, [setNodes]);\n  const handleInit = instance => {\n    setReactFlowInstance(instance);\n\n    // Force a layout refresh on init\n    setTimeout(() => {\n      instance.fitView({\n        padding: 0.2\n      });\n      instance.zoomTo(1.0); // Set a fixed zoom level\n\n      // Center the viewport\n      if (nodes.length > 0) {\n        const node = nodes[0];\n        instance.setCenter(node.position.x, node.position.y);\n      }\n    }, 200);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '600px',\n      border: '1px solid #eee'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onInit: handleInit,\n        onNodeDragStop: onNodeDragStop,\n        nodeTypes: {\n          custom: CustomNode\n        },\n        connectionMode: ConnectionMode.Loose,\n        connectionLineType: ConnectionLineType.SmoothStep,\n        fitView: true,\n        fitViewOptions: {\n          padding: 0.2\n        },\n        minZoom: 0.2,\n        maxZoom: 2,\n        defaultViewport: {\n          x: 0,\n          y: 0,\n          zoom: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls, {\n          position: \"bottom-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#f8f8f8\",\n          gap: 16,\n          size: 1,\n          variant: \"dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Panel, {\n          position: \"top-left\",\n          style: {\n            margin: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              background: 'rgba(255, 255, 255, 0.8)',\n              padding: '5px',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExportImage,\n              style: {\n                padding: '5px 10px',\n                fontSize: '12px',\n                backgroundColor: '#f0f0f0',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Export as PNG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleExportTrie,\n              style: {\n                padding: '5px 10px',\n                fontSize: '12px',\n                backgroundColor: '#f0f0f0',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Export as .trie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"import-button\",\n              style: {\n                padding: '5px 10px',\n                fontSize: '12px',\n                backgroundColor: '#f0f0f0',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                border: '1px solid #ccc',\n                margin: 0\n              },\n              children: [\"Import .trie\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".trie\",\n                onChange: handleImportTrie,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), nodeTypeSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: nodeTypeSelector.top,\n            left: nodeTypeSelector.left,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '8px',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n            zIndex: 100,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              marginBottom: '5px'\n            },\n            children: \"Select Node Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => createConnection(nodeTypeSelector.sourceId, nodeTypeSelector.targetId, 'because'),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px',\n              padding: '5px 10px',\n              background: '#e6f6e6',\n              border: '1px solid #2e7d32',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '16px'\n              },\n              children: \"\\uD83D\\uDC4D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), \" Support (Because)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => createConnection(nodeTypeSelector.sourceId, nodeTypeSelector.targetId, 'but'),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px',\n              padding: '5px 10px',\n              background: '#f6e6e6',\n              border: '1px solid #c62828',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '16px'\n              },\n              children: \"\\uD83D\\uDC4E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), \" Oppose (But)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => createConnection(nodeTypeSelector.sourceId, nodeTypeSelector.targetId, 'however'),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px',\n              padding: '5px 10px',\n              background: '#e6e6f6',\n              border: '1px solid #1565c0',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '16px'\n              },\n              children: \"\\u270B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), \" Explore (However)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setNodeTypeSelector(null),\n            style: {\n              padding: '5px 10px',\n              background: '#f0f0f0',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              marginTop: '5px'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n\n// Make the addChildNode function available globally for CustomNode components\n_s(ArgumentMap, \"R5sUTqvzn+Fwjd//uwIoiqqP27M=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n});\n_c = ArgumentMap;\nwindow.addChildNode = (parentId, nodeType) => {\n  if (window.addChildNodeImpl) {\n    window.addChildNodeImpl(parentId, nodeType);\n  }\n};\nexport default ArgumentMap;\nvar _c;\n$RefreshReg$(_c, \"ArgumentMap\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useContext","useEffect","ReactFlow","Controls","Background","useNodesState","useEdgesState","MarkerType","Panel","ConnectionLineType","ConnectionMode","useReactFlow","AppContext","CustomNode","exportToImage","exportToTrie","importFromTrie","validateStatement","jsxDEV","_jsxDEV","ArgumentMap","initialResolution","_s","saveWipState","loadWipState","nodeStyles","setCurrentMap","deleteNode","updateNodeText","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","nodeTypeSelector","setNodeTypeSelector","connectionState","setConnectionState","project","length","setTimeout","initialNodes","id","type","position","x","y","data","label","savedState","window","addChildNodeImpl","parentId","nodeType","_nodeStyles$nodeType","parentNode","find","node","statement","prompt","newNodeId","toString","newPosition","newNode","nodeTypeColor","background","newEdge","source","target","style","stroke","strokeWidth","markerEnd","ArrowClosed","color","nds","eds","fitView","padding","undefined","onConnectStart","_","nodeId","sourceId","onConnectEnd","event","targetPosition","clientX","clientY","top","left","targetId","selectedType","createConnection","_nodeStyles$nodeType2","filter","animated","map","handleExportImage","current","handleExportTrie","styles","handleImportTrie","file","files","importedData","error","console","alert","onNodeDragStop","prevNodes","n","handleInit","instance","zoomTo","setCenter","width","height","border","children","ref","onInit","nodeTypes","custom","connectionMode","Loose","connectionLineType","SmoothStep","fitViewOptions","minZoom","maxZoom","defaultViewport","zoom","fileName","_jsxFileName","lineNumber","columnNumber","gap","size","variant","margin","display","borderRadius","onClick","fontSize","backgroundColor","cursor","className","accept","onChange","boxShadow","zIndex","flexDirection","fontWeight","marginBottom","alignItems","marginTop","_c","addChildNode","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport { \n  ReactFlow, \n  Controls, \n  Background, \n  useNodesState, \n  useEdgesState, \n  MarkerType,\n  Panel,\n  ConnectionLineType,\n  ConnectionMode,\n  useReactFlow\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { AppContext } from '../../context/AppContext';\nimport CustomNode from './CustomNode';\nimport { exportToImage, exportToTrie, importFromTrie } from '../../utils/exportUtils';\nimport { validateStatement } from '../../utils/validationUtils';\n\n// Main ArgumentMap component\nconst ArgumentMap = ({ initialResolution }) => {\n  const { \n    saveWipState, \n    loadWipState, \n    nodeStyles, \n    setCurrentMap,\n    deleteNode,\n    updateNodeText\n  } = useContext(AppContext);\n  \n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [nodeTypeSelector, setNodeTypeSelector] = useState(null);\n  const [connectionState, setConnectionState] = useState(null);\n  const { project } = useReactFlow();\n  \n  // Initialize the resolution node when component mounts or resolution changes\n  useEffect(() => {\n    if (initialResolution && !nodes.length) {\n      setTimeout(() => {\n        const initialNodes = [\n          {\n            id: '1',\n            type: 'custom',\n            position: { x: 350, y: 50 },\n            data: { \n              label: initialResolution,\n              type: 'resolution',\n            },\n          },\n        ];\n        setNodes(initialNodes);\n      }, 100);\n    }\n  }, [initialResolution, setNodes, nodes.length]);\n\n  // Save current map state to context when it changes\n  useEffect(() => {\n    if (nodes.length > 0) {\n      setCurrentMap({ nodes, edges });\n      saveWipState({ nodes, edges });\n    }\n  }, [nodes, edges, setCurrentMap, saveWipState]);\n\n  // Try to load saved WIP state when component mounts\n  useEffect(() => {\n    const savedState = loadWipState();\n    if (savedState && savedState.nodes && savedState.nodes.length > 0) {\n      setNodes(savedState.nodes);\n      setEdges(savedState.edges || []);\n    }\n  }, [loadWipState, setNodes, setEdges]);\n\n  // Implement the addChildNode function for direct node creation from stance buttons\n  useEffect(() => {\n    if (reactFlowInstance) {\n      // Implementation of the addChildNode function\n      window.addChildNodeImpl = (parentId, nodeType) => {\n        // Find the parent node\n        const parentNode = nodes.find(node => node.id === parentId);\n        if (!parentNode) return;\n        \n        // Prompt for statement text\n        const statement = prompt(`Enter your ${nodeType} statement:`);\n        \n        // Only proceed if valid text is entered\n        if (!statement) {\n          return;\n        }\n        \n        // Generate a new node ID\n        const newNodeId = (nodes.length + 1).toString();\n        \n        // Calculate position below parent node - much closer now\n        const newPosition = {\n          x: parentNode.position.x,\n          y: parentNode.position.y + 60, // Position much closer to parent node\n        };\n        \n        // Create new node\n        const newNode = {\n          id: newNodeId,\n          type: 'custom',\n          position: newPosition,\n          data: {\n            label: statement,\n            type: nodeType,\n          },\n        };\n        \n        // Create connection (edge) from parent to new node\n        const nodeTypeColor = nodeStyles[nodeType]?.background || '#cccccc';\n        const newEdge = {\n          id: `e${parentId}-${newNodeId}`,\n          source: parentId,\n          target: newNodeId,\n          type: 'default', \n          data: { type: nodeType },\n          style: { stroke: nodeTypeColor, strokeWidth: 2 },\n          markerEnd: {\n            type: MarkerType.ArrowClosed,\n            color: nodeTypeColor\n          },\n        };\n        \n        // Add new node and edge\n        setNodes(nds => [...nds, newNode]);\n        setEdges(eds => [...eds, newEdge]);\n        \n        // Center view on the new node\n        setTimeout(() => {\n          reactFlowInstance.fitView({ padding: 0.2 });\n        }, 50);\n      };\n    }\n    \n    return () => {\n      // Cleanup\n      window.addChildNodeImpl = undefined;\n    };\n  }, [reactFlowInstance, nodes, setNodes, setEdges, nodeStyles]);\n\n  // Start connection\n  const onConnectStart = useCallback((_, { nodeId }) => {\n    setConnectionState({ sourceId: nodeId });\n  }, []);\n\n  // Handle connection end\n  const onConnectEnd = useCallback((event) => {\n    if (!connectionState || !connectionState.sourceId) return;\n    \n    // The position where the connection ends\n    const targetPosition = project({\n      x: event.clientX,\n      y: event.clientY,\n    });\n    \n    // Generate a new ID for the node\n    const newNodeId = (nodes.length + 1).toString();\n    \n    // Create a new node at the position\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: targetPosition,\n      data: { \n        label: `Enter your statement`,\n        type: 'because', // Default, will be updated when user selects\n      },\n    };\n    \n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n    \n    // In onConnectEnd:\n    setNodeTypeSelector({\n      top: event.clientY,\n      left: event.clientX,\n      sourceId: connectionState.sourceId,\n      targetId: newNodeId,\n      selectedType: null,\n      statement: ''\n    });\n    \n    // Reset the connection state\n    setConnectionState(null);\n  }, [connectionState, project, nodes.length, setNodes]);\n\n  // Create a new connection with the selected node type\n  const createConnection = useCallback((sourceId, targetId, nodeType) => {\n    // Prompt for statement text\n    const statement = prompt(`Enter your ${nodeType} statement:`);\n    \n    // Only proceed if text is entered\n    if (!statement) {\n      // Remove the temporary node if canceled\n      setNodes(nds => nds.filter(node => node.id !== targetId));\n      setNodeTypeSelector(null);\n      return;\n    }\n    \n    // Get color for this node type\n    const nodeTypeColor = nodeStyles[nodeType]?.background || '#cccccc';\n    \n    // Add edge with appropriate styling\n    const newEdge = {\n      id: `e${sourceId}-${targetId}`,\n      source: sourceId,\n      target: targetId,\n      type: 'default',\n      data: { type: nodeType },\n      animated: false,\n      style: { stroke: nodeTypeColor, strokeWidth: 2 },\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n        color: nodeTypeColor\n      },\n    };\n    \n    // Update the target node type and statement\n    setNodes(nds => nds.map(node => {\n      if (node.id === targetId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            type: nodeType,\n            label: statement\n          }\n        };\n      }\n      return node;\n    }));\n    \n    setEdges(eds => [...eds, newEdge]);\n    \n    // Close the selector\n    setNodeTypeSelector(null);\n  }, [nodeStyles, setNodes, setEdges]);\n\n  // Export the argument map as an image\n  const handleExportImage = useCallback(() => {\n    if (reactFlowInstance && reactFlowWrapper.current) {\n      exportToImage(reactFlowWrapper.current, 'argument-map.png');\n    }\n  }, [reactFlowInstance]);\n\n  // Export the argument map as a .trie file\n  const handleExportTrie = useCallback(() => {\n    if (nodes.length > 0) {\n      exportToTrie({ nodes, edges, styles: nodeStyles }, 'argument-map.trie');\n    }\n  }, [nodes, edges, nodeStyles]);\n\n  // Import from a .trie file\n  const handleImportTrie = useCallback(async (event) => {\n    try {\n      const file = event.target.files[0];\n      const importedData = await importFromTrie(file);\n      \n      if (importedData && importedData.nodes && importedData.edges) {\n        setNodes(importedData.nodes);\n        setEdges(importedData.edges);\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      alert('Failed to import the file. Please ensure it is a valid .trie file.');\n    }\n  }, [setNodes, setEdges]);\n\n  // Update node positions after drag\n  const onNodeDragStop = useCallback((_, node) => {\n    setNodes((prevNodes) =>\n      prevNodes.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\n    );\n  }, [setNodes]);\n\n  const handleInit = (instance) => {\n    setReactFlowInstance(instance);\n    \n    // Force a layout refresh on init\n    setTimeout(() => {\n      instance.fitView({ padding: 0.2 });\n      instance.zoomTo(1.0); // Set a fixed zoom level\n      \n      // Center the viewport\n      if (nodes.length > 0) {\n        const node = nodes[0];\n        instance.setCenter(node.position.x, node.position.y);\n      }\n    }, 200);\n  };\n\n  return (\n    <div style={{ width: '100%', height: '600px', border: '1px solid #eee' }}>\n      <div ref={reactFlowWrapper} style={{ width: '100%', height: '100%' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnectStart={onConnectStart}\n          onConnectEnd={onConnectEnd}\n          onInit={handleInit}\n          onNodeDragStop={onNodeDragStop}\n          nodeTypes={{ custom: CustomNode }}\n          connectionMode={ConnectionMode.Loose}\n          connectionLineType={ConnectionLineType.SmoothStep}\n          fitView\n          fitViewOptions={{ padding: 0.2 }}\n          minZoom={0.2}\n          maxZoom={2}\n          defaultViewport={{ x: 0, y: 0, zoom: 1 }}\n        >\n          <Controls position=\"bottom-right\" />\n          <Background color=\"#f8f8f8\" gap={16} size={1} variant=\"dots\" />\n          \n          <Panel position=\"top-left\" style={{ margin: '10px' }}>\n            <div style={{ \n              display: 'flex', \n              gap: '10px',\n              background: 'rgba(255, 255, 255, 0.8)',\n              padding: '5px',\n              borderRadius: '4px'\n            }}>\n              <button \n                onClick={handleExportImage}\n                style={{\n                  padding: '5px 10px',\n                  fontSize: '12px',\n                  backgroundColor: '#f0f0f0',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >Export as PNG</button>\n              <button \n                onClick={handleExportTrie}\n                style={{\n                  padding: '5px 10px',\n                  fontSize: '12px',\n                  backgroundColor: '#f0f0f0',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >Export as .trie</button>\n              <label className=\"import-button\" style={{ \n                padding: '5px 10px', \n                fontSize: '12px',\n                backgroundColor: '#f0f0f0', \n                borderRadius: '4px', \n                cursor: 'pointer',\n                border: '1px solid #ccc',\n                margin: 0\n              }}>\n                Import .trie\n                <input \n                  type=\"file\" \n                  accept=\".trie\" \n                  onChange={handleImportTrie} \n                  style={{ display: 'none' }} \n                />\n              </label>\n            </div>\n          </Panel>\n          \n          {/* Node Type Selector Popup */}\n          {nodeTypeSelector && (\n            <div style={{\n              position: 'absolute',\n              top: nodeTypeSelector.top,\n              left: nodeTypeSelector.left,\n              background: 'white',\n              padding: '10px',\n              borderRadius: '8px',\n              boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n              zIndex: 100,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '5px'\n            }}>\n              <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>Select Node Type:</div>\n              <button \n                onClick={() => createConnection(nodeTypeSelector.sourceId, nodeTypeSelector.targetId, 'because')}\n                style={{ \n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '5px',\n                  padding: '5px 10px',\n                  background: '#e6f6e6',\n                  border: '1px solid #2e7d32',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                <span style={{ fontSize: '16px' }}>👍</span> Support (Because)\n              </button>\n              <button \n                onClick={() => createConnection(nodeTypeSelector.sourceId, nodeTypeSelector.targetId, 'but')}\n                style={{ \n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '5px',\n                  padding: '5px 10px',\n                  background: '#f6e6e6',\n                  border: '1px solid #c62828',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                <span style={{ fontSize: '16px' }}>👎</span> Oppose (But)\n              </button>\n              <button \n                onClick={() => createConnection(nodeTypeSelector.sourceId, nodeTypeSelector.targetId, 'however')}\n                style={{ \n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '5px',\n                  padding: '5px 10px',\n                  background: '#e6e6f6',\n                  border: '1px solid #1565c0',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                <span style={{ fontSize: '16px' }}>✋</span> Explore (However)\n              </button>\n              <button \n                onClick={() => setNodeTypeSelector(null)}\n                style={{ \n                  padding: '5px 10px',\n                  background: '#f0f0f0',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  marginTop: '5px'\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          )}\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\n// Make the addChildNode function available globally for CustomNode components\nwindow.addChildNode = (parentId, nodeType) => {\n  if (window.addChildNodeImpl) {\n    window.addChildNodeImpl(parentId, nodeType);\n  }\n};\n\nexport default ArgumentMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}