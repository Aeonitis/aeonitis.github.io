{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/NodeCustomization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { CirclePicker } from 'react-color';\nimport { AppContext } from '../../context/AppContext';\n\n// Node types with default labels and descriptions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = [{\n  id: 'resolution',\n  label: 'Resolution',\n  description: 'The main claim or statement of your argument',\n  defaultColor: '#f0e6f6'\n}, {\n  id: 'because',\n  label: 'Because',\n  description: 'Supporting reasons that strengthen your claim',\n  defaultColor: '#e6f6e6'\n}, {\n  id: 'but',\n  label: 'But',\n  description: 'Opposing arguments or counterpoints',\n  defaultColor: '#f6e6e6'\n}, {\n  id: 'however',\n  label: 'However',\n  description: 'Qualifying statements or explorations',\n  defaultColor: '#e6e6f6'\n}];\n\n// Predefined color options that work well together\nconst colorOptions = ['#f0e6f6', '#e6f6e6', '#f6e6e6', '#e6e6f6',\n// Pastel colors\n'#ffcccc', '#ccffcc', '#ccccff', '#ffffcc',\n// Light colors\n'#d1c4e9', '#c5e1a5', '#ffcc80', '#b3e0ff',\n// Medium intensity\n'#9575cd', '#7cb342', '#ffa726', '#29b6f6' // Stronger colors\n];\nconst NodeCustomization = () => {\n  _s();\n  var _nodeTypes$find3;\n  const {\n    nodeStyles,\n    updateNodeStyle\n  } = useContext(AppContext);\n  const [selectedNodeType, setSelectedNodeType] = useState(nodeTypes[0].id);\n\n  // Handle color change from the color picker\n  const handleColorChange = color => {\n    updateNodeStyle(selectedNodeType, color.hex);\n  };\n\n  // Get the current color for the selected node type\n  const getCurrentColor = () => {\n    var _nodeTypes$find;\n    return nodeStyles[selectedNodeType] || ((_nodeTypes$find = nodeTypes.find(type => type.id === selectedNodeType)) === null || _nodeTypes$find === void 0 ? void 0 : _nodeTypes$find.defaultColor) || '#ffffff';\n  };\n\n  // Reset to default color\n  const handleResetColor = () => {\n    var _nodeTypes$find2;\n    const defaultColor = (_nodeTypes$find2 = nodeTypes.find(type => type.id === selectedNodeType)) === null || _nodeTypes$find2 === void 0 ? void 0 : _nodeTypes$find2.defaultColor;\n    if (defaultColor) {\n      updateNodeStyle(selectedNodeType, defaultColor);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-customization\",\n    style: {\n      padding: '15px',\n      backgroundColor: '#ffffff',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: 0,\n        marginBottom: '15px'\n      },\n      children: \"Customize Node Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-type-tabs\",\n      style: {\n        display: 'flex',\n        borderBottom: '1px solid #e0e0e0',\n        marginBottom: '15px'\n      },\n      children: nodeTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedNodeType(type.id),\n        style: {\n          padding: '8px 12px',\n          background: selectedNodeType === type.id ? '#f0f0f0' : 'transparent',\n          border: 'none',\n          borderBottom: selectedNodeType === type.id ? '2px solid #1a73e8' : 'none',\n          cursor: 'pointer',\n          fontWeight: selectedNodeType === type.id ? 'bold' : 'normal',\n          outline: 'none',\n          transition: 'all 0.2s ease'\n        },\n        children: type.label\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-type-description\",\n      style: {\n        marginBottom: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          color: '#666'\n        },\n        children: (_nodeTypes$find3 = nodeTypes.find(type => type.id === selectedNodeType)) === null || _nodeTypes$find3 === void 0 ? void 0 : _nodeTypes$find3.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-preview\",\n      style: {\n        width: '100%',\n        height: '50px',\n        backgroundColor: getCurrentColor(),\n        borderRadius: '4px',\n        marginBottom: '15px',\n        border: '1px solid #e0e0e0',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: '#666',\n        fontSize: '14px'\n      },\n      children: getCurrentColor()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker-container\",\n      style: {\n        marginBottom: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CirclePicker, {\n        colors: colorOptions,\n        color: getCurrentColor(),\n        onChange: handleColorChange,\n        width: \"100%\",\n        circleSize: 24,\n        circleSpacing: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetColor,\n      style: {\n        padding: '8px 12px',\n        backgroundColor: '#f0f0f0',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: \"Reset to Default\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(NodeCustomization, \"OY0/3+JIfGGs74vU0Tvd9esOeDo=\");\n_c = NodeCustomization;\nexport default NodeCustomization;\nvar _c;\n$RefreshReg$(_c, \"NodeCustomization\");","map":{"version":3,"names":["React","useState","useContext","CirclePicker","AppContext","jsxDEV","_jsxDEV","nodeTypes","id","label","description","defaultColor","colorOptions","NodeCustomization","_s","_nodeTypes$find3","nodeStyles","updateNodeStyle","selectedNodeType","setSelectedNodeType","handleColorChange","color","hex","getCurrentColor","_nodeTypes$find","find","type","handleResetColor","_nodeTypes$find2","className","style","padding","backgroundColor","borderRadius","boxShadow","marginBottom","children","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","borderBottom","map","onClick","background","border","cursor","fontWeight","outline","transition","margin","width","height","justifyContent","alignItems","fontSize","colors","onChange","circleSize","circleSpacing","_c","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/NodeCustomization.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { CirclePicker } from 'react-color';\nimport { AppContext } from '../../context/AppContext';\n\n// Node types with default labels and descriptions\nconst nodeTypes = [\n  {\n    id: 'resolution',\n    label: 'Resolution',\n    description: 'The main claim or statement of your argument',\n    defaultColor: '#f0e6f6'\n  },\n  {\n    id: 'because',\n    label: 'Because',\n    description: 'Supporting reasons that strengthen your claim',\n    defaultColor: '#e6f6e6'\n  },\n  {\n    id: 'but',\n    label: 'But',\n    description: 'Opposing arguments or counterpoints',\n    defaultColor: '#f6e6e6'\n  },\n  {\n    id: 'however',\n    label: 'However',\n    description: 'Qualifying statements or explorations',\n    defaultColor: '#e6e6f6'\n  }\n];\n\n// Predefined color options that work well together\nconst colorOptions = [\n  '#f0e6f6', '#e6f6e6', '#f6e6e6', '#e6e6f6', // Pastel colors\n  '#ffcccc', '#ccffcc', '#ccccff', '#ffffcc', // Light colors\n  '#d1c4e9', '#c5e1a5', '#ffcc80', '#b3e0ff', // Medium intensity\n  '#9575cd', '#7cb342', '#ffa726', '#29b6f6', // Stronger colors\n];\n\nconst NodeCustomization = () => {\n  const { nodeStyles, updateNodeStyle } = useContext(AppContext);\n  const [selectedNodeType, setSelectedNodeType] = useState(nodeTypes[0].id);\n\n  // Handle color change from the color picker\n  const handleColorChange = (color) => {\n    updateNodeStyle(selectedNodeType, color.hex);\n  };\n\n  // Get the current color for the selected node type\n  const getCurrentColor = () => {\n    return nodeStyles[selectedNodeType] || \n      nodeTypes.find(type => type.id === selectedNodeType)?.defaultColor ||\n      '#ffffff';\n  };\n\n  // Reset to default color\n  const handleResetColor = () => {\n    const defaultColor = nodeTypes.find(type => type.id === selectedNodeType)?.defaultColor;\n    if (defaultColor) {\n      updateNodeStyle(selectedNodeType, defaultColor);\n    }\n  };\n\n  return (\n    <div className=\"node-customization\" style={{ \n      padding: '15px',\n      backgroundColor: '#ffffff',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      marginBottom: '20px'\n    }}>\n      <h3 style={{ marginTop: 0, marginBottom: '15px' }}>Customize Node Colors</h3>\n      \n      <div className=\"node-type-tabs\" style={{ \n        display: 'flex', \n        borderBottom: '1px solid #e0e0e0',\n        marginBottom: '15px'\n      }}>\n        {nodeTypes.map(type => (\n          <button \n            key={type.id}\n            onClick={() => setSelectedNodeType(type.id)}\n            style={{\n              padding: '8px 12px',\n              background: selectedNodeType === type.id ? '#f0f0f0' : 'transparent',\n              border: 'none',\n              borderBottom: selectedNodeType === type.id ? '2px solid #1a73e8' : 'none',\n              cursor: 'pointer',\n              fontWeight: selectedNodeType === type.id ? 'bold' : 'normal',\n              outline: 'none',\n              transition: 'all 0.2s ease'\n            }}\n          >\n            {type.label}\n          </button>\n        ))}\n      </div>\n      \n      <div className=\"node-type-description\" style={{ marginBottom: '15px' }}>\n        <p style={{ margin: 0, color: '#666' }}>\n          {nodeTypes.find(type => type.id === selectedNodeType)?.description}\n        </p>\n      </div>\n      \n      <div className=\"color-preview\" style={{ \n        width: '100%',\n        height: '50px',\n        backgroundColor: getCurrentColor(),\n        borderRadius: '4px',\n        marginBottom: '15px',\n        border: '1px solid #e0e0e0',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: '#666',\n        fontSize: '14px'\n      }}>\n        {getCurrentColor()}\n      </div>\n      \n      <div className=\"color-picker-container\" style={{ marginBottom: '15px' }}>\n        <CirclePicker \n          colors={colorOptions}\n          color={getCurrentColor()}\n          onChange={handleColorChange}\n          width=\"100%\"\n          circleSize={24}\n          circleSpacing={12}\n        />\n      </div>\n      \n      <button \n        onClick={handleResetColor}\n        style={{\n          padding: '8px 12px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        }}\n      >\n        Reset to Default\n      </button>\n    </div>\n  );\n};\n\nexport default NodeCustomization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}