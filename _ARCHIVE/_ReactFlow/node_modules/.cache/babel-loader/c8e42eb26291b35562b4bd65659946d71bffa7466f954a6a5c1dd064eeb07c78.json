{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/NodeButton.jsx\";\nimport React from 'react';\n\n// Button styles based on node type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyles = {\n  because: {\n    backgroundColor: 'rgba(46, 125, 50, 0.1)',\n    color: '#2e7d32',\n    border: '1px solid #2e7d32'\n  },\n  but: {\n    backgroundColor: 'rgba(198, 40, 40, 0.1)',\n    color: '#c62828',\n    border: '1px solid #c62828'\n  },\n  however: {\n    backgroundColor: 'rgba(21, 101, 192, 0.1)',\n    color: '#1565c0',\n    border: '1px solid #1565c0'\n  }\n};\nconst NodeButton = ({\n  nodeId,\n  type,\n  label\n}) => {\n  const handleClick = () => {\n    // This function is defined in ArgumentMap and exposed via window\n    if (typeof window.addNodeToArgumentMap === 'function') {\n      window.addNodeToArgumentMap(nodeId, type);\n    }\n  };\n\n  // Get the style for this button type\n  const style = buttonStyles[type] || {\n    backgroundColor: '#f0f0f0',\n    color: '#333',\n    border: '1px solid #ddd'\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    style: {\n      padding: '4px 10px',\n      borderRadius: '4px',\n      fontSize: '13px',\n      cursor: 'pointer',\n      outline: 'none',\n      transition: 'all 0.2s ease',\n      fontWeight: 'medium',\n      ...style\n    },\n    title: `Add a ${label} statement`,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = NodeButton;\nexport default NodeButton;\nvar _c;\n$RefreshReg$(_c, \"NodeButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","buttonStyles","because","backgroundColor","color","border","but","however","NodeButton","nodeId","type","label","handleClick","window","addNodeToArgumentMap","style","onClick","padding","borderRadius","fontSize","cursor","outline","transition","fontWeight","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/NodeButton.jsx"],"sourcesContent":["import React from 'react';\n\n// Button styles based on node type\nconst buttonStyles = {\n  because: {\n    backgroundColor: 'rgba(46, 125, 50, 0.1)',\n    color: '#2e7d32',\n    border: '1px solid #2e7d32'\n  },\n  but: {\n    backgroundColor: 'rgba(198, 40, 40, 0.1)',\n    color: '#c62828',\n    border: '1px solid #c62828'\n  },\n  however: {\n    backgroundColor: 'rgba(21, 101, 192, 0.1)',\n    color: '#1565c0',\n    border: '1px solid #1565c0'\n  }\n};\n\nconst NodeButton = ({ nodeId, type, label }) => {\n  const handleClick = () => {\n    // This function is defined in ArgumentMap and exposed via window\n    if (typeof window.addNodeToArgumentMap === 'function') {\n      window.addNodeToArgumentMap(nodeId, type);\n    }\n  };\n\n  // Get the style for this button type\n  const style = buttonStyles[type] || {\n    backgroundColor: '#f0f0f0',\n    color: '#333',\n    border: '1px solid #ddd'\n  };\n\n  return (\n    <button\n      onClick={handleClick}\n      style={{\n        padding: '4px 10px',\n        borderRadius: '4px',\n        fontSize: '13px',\n        cursor: 'pointer',\n        outline: 'none',\n        transition: 'all 0.2s ease',\n        fontWeight: 'medium',\n        ...style\n      }}\n      title={`Add a ${label} statement`}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default NodeButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;IACPC,eAAe,EAAE,wBAAwB;IACzCC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE;EACV,CAAC;EACDC,GAAG,EAAE;IACHH,eAAe,EAAE,wBAAwB;IACzCC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE;EACV,CAAC;EACDE,OAAO,EAAE;IACPJ,eAAe,EAAE,yBAAyB;IAC1CC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE;EACV;AACF,CAAC;AAED,MAAMG,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAC9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,IAAI,OAAOC,MAAM,CAACC,oBAAoB,KAAK,UAAU,EAAE;MACrDD,MAAM,CAACC,oBAAoB,CAACL,MAAM,EAAEC,IAAI,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMK,KAAK,GAAGd,YAAY,CAACS,IAAI,CAAC,IAAI;IAClCP,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,oBACEL,OAAA;IACEgB,OAAO,EAAEJ,WAAY;IACrBG,KAAK,EAAE;MACLE,OAAO,EAAE,UAAU;MACnBC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,eAAe;MAC3BC,UAAU,EAAE,QAAQ;MACpB,GAAGR;IACL,CAAE;IACFS,KAAK,EAAE,SAASb,KAAK,YAAa;IAAAc,QAAA,EAEjCd;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACC,EAAA,GAjCItB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}