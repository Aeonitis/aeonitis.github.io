{"ast":null,"code":"var _jsxFileName = \"/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, useNodesState, useEdgesState, addEdge, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Simple custom node component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data,\n  id\n}) => {\n  console.log(\"Rendering CustomNode:\", id, data);\n  const handleAddChild = () => {\n    console.log(\"Add child button clicked for node:\", id);\n\n    // Use global function set up by parent component\n    if (typeof window.addNodeToMap === 'function') {\n      window.addNodeToMap(id, \"because\");\n    } else {\n      console.error(\"window.addNodeToMap is not available\");\n      alert(\"Add node function not available\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      background: data.type === 'resolution' ? '#f0e6f6' : '#e6f6e6',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      minWidth: '200px',\n      maxWidth: '300px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: '10px'\n      },\n      children: data.type === 'resolution' ? 'Resolution' : 'Point'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px'\n      },\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddChild,\n      style: {\n        padding: '8px 12px',\n        background: '#1a73e8',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: \"Add Child (\\uD83D\\uDC4D)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst ArgumentMap = ({\n  initialResolution\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Set initial node when component mounts\n  useState(() => {\n    if (initialResolution) {\n      setNodes([{\n        id: '1',\n        type: 'custom',\n        position: {\n          x: 250,\n          y: 25\n        },\n        data: {\n          label: initialResolution,\n          type: 'resolution'\n        }\n      }]);\n    }\n  }, [initialResolution]);\n\n  // Add node function\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(`Adding node to parent ${parentId} of type ${nodeType}`);\n\n    // Find parent node\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found\");\n      return;\n    }\n\n    // Create new node\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: {\n        x: parentNode.position.x,\n        y: parentNode.position.y + 150\n      },\n      data: {\n        label: `New ${nodeType} point`,\n        type: nodeType\n      }\n    };\n\n    // Create edge connecting parent to new node\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    };\n\n    // Update state\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    console.log(\"Added new node:\", newNode);\n  }, [nodes, setNodes, setEdges]);\n\n  // Make add node function globally available\n  React.useEffect(() => {\n    console.log(\"Setting global addNodeToMap function\");\n    window.addNodeToMap = addNode;\n    return () => {\n      console.log(\"Cleaning up global addNodeToMap function\");\n      delete window.addNodeToMap;\n    };\n  }, [addNode]);\n\n  // Handle connections between nodes\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        color: \"#f8f8f8\",\n        variant: \"dots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(ArgumentMap, \"LpjxxGE7dV0k0TbsfJhdnWA6zWc=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = ArgumentMap;\nexport default ArgumentMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"ArgumentMap\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","Controls","Background","useNodesState","useEdgesState","addEdge","MarkerType","jsxDEV","_jsxDEV","CustomNode","data","id","console","log","handleAddChild","window","addNodeToMap","error","alert","style","padding","background","type","border","borderRadius","minWidth","maxWidth","textAlign","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","color","cursor","_c","nodeTypes","custom","ArgumentMap","initialResolution","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","position","x","y","addNode","parentId","nodeType","parentNode","find","node","newNodeId","length","toString","newNode","newEdge","source","target","markerEnd","ArrowClosed","nds","eds","useEffect","onConnect","params","height","width","fitView","variant","_c2","$RefreshReg$"],"sources":["/Users/aeonitis/dev/wip/n/aeonitis.github.io/src/components/ArgumentMap/ArgumentMap.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport ReactFlow, {\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  MarkerType\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Simple custom node component\nconst CustomNode = ({ data, id }) => {\n  console.log(\"Rendering CustomNode:\", id, data);\n  \n  const handleAddChild = () => {\n    console.log(\"Add child button clicked for node:\", id);\n    \n    // Use global function set up by parent component\n    if (typeof window.addNodeToMap === 'function') {\n      window.addNodeToMap(id, \"because\");\n    } else {\n      console.error(\"window.addNodeToMap is not available\");\n      alert(\"Add node function not available\");\n    }\n  };\n  \n  return (\n    <div \n      style={{\n        padding: '15px',\n        background: data.type === 'resolution' ? '#f0e6f6' : '#e6f6e6',\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        minWidth: '200px',\n        maxWidth: '300px',\n        textAlign: 'center'\n      }}\n    >\n      <div style={{ fontWeight: 'bold', marginBottom: '10px' }}>\n        {data.type === 'resolution' ? 'Resolution' : 'Point'}\n      </div>\n      \n      <div style={{ marginBottom: '15px' }}>\n        {data.label}\n      </div>\n      \n      <button \n        onClick={handleAddChild}\n        style={{\n          padding: '8px 12px',\n          background: '#1a73e8',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        }}\n      >\n        Add Child (üëç)\n      </button>\n    </div>\n  );\n};\n\nconst nodeTypes = {\n  custom: CustomNode\n};\n\nconst ArgumentMap = ({ initialResolution }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  \n  // Set initial node when component mounts\n  useState(() => {\n    if (initialResolution) {\n      setNodes([\n        {\n          id: '1',\n          type: 'custom',\n          position: { x: 250, y: 25 },\n          data: { \n            label: initialResolution,\n            type: 'resolution',\n          },\n        }\n      ]);\n    }\n  }, [initialResolution]);\n  \n  // Add node function\n  const addNode = useCallback((parentId, nodeType) => {\n    console.log(`Adding node to parent ${parentId} of type ${nodeType}`);\n    \n    // Find parent node\n    const parentNode = nodes.find(node => node.id === parentId);\n    if (!parentNode) {\n      console.error(\"Parent node not found\");\n      return;\n    }\n    \n    // Create new node\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: { \n        x: parentNode.position.x,\n        y: parentNode.position.y + 150\n      },\n      data: { \n        label: `New ${nodeType} point`,\n        type: nodeType,\n      },\n    };\n    \n    // Create edge connecting parent to new node\n    const newEdge = {\n      id: `e${parentId}-${newNodeId}`,\n      source: parentId,\n      target: newNodeId,\n      markerEnd: {\n        type: MarkerType.ArrowClosed,\n      },\n    };\n    \n    // Update state\n    setNodes(nds => [...nds, newNode]);\n    setEdges(eds => [...eds, newEdge]);\n    \n    console.log(\"Added new node:\", newNode);\n  }, [nodes, setNodes, setEdges]);\n  \n  // Make add node function globally available\n  React.useEffect(() => {\n    console.log(\"Setting global addNodeToMap function\");\n    window.addNodeToMap = addNode;\n    \n    return () => {\n      console.log(\"Cleaning up global addNodeToMap function\");\n      delete window.addNodeToMap;\n    };\n  }, [addNode]);\n  \n  // Handle connections between nodes\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n  \n  return (\n    <div style={{ height: '500px', width: '100%' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        nodeTypes={nodeTypes}\n        fitView\n      >\n        <Controls />\n        <Background color=\"#f8f8f8\" variant=\"dots\" />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default ArgumentMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}